{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { MessageService } from \"primeng/api\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../service/auth/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"primeng/api\";\nimport * as i5 from \"@angular/common\";\nfunction LoginComponent_div_18_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" El nombre de usuario es obligatorio.\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" El nombre de usuario debe tener al menos 8 caracteres.\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_small_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" El nombre de usuario no puede tener m\\u00E1s de 20 caracteres.\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_small_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" El nombre de usuario debe contener al menos una letra may\\u00FAscula y un n\\u00FAmero.\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_18_small_1_Template, 3, 0, \"small\", 19);\n    i0.ɵɵtemplate(2, LoginComponent_div_18_small_2_Template, 3, 0, \"small\", 19);\n    i0.ɵɵtemplate(3, LoginComponent_div_18_small_3_Template, 3, 0, \"small\", 19);\n    i0.ɵɵtemplate(4, LoginComponent_div_18_small_4_Template, 3, 0, \"small\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.loginForm.get(\"userName\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"userName\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.loginForm.get(\"userName\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"maxlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r0.loginForm.get(\"userName\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"pattern\"]);\n  }\n}\nfunction LoginComponent_div_22_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" La contrase\\u00F1a es obligatoria.\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_22_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" La contrase\\u00F1a debe tener al menos 8 caracteres.\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_22_small_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" La contrase\\u00F1a debe contener al menos una letra may\\u00FAscula y un car\\u00E1cter especial.\");\n    i0.ɵɵelement(2, \"br\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, LoginComponent_div_22_small_1_Template, 3, 0, \"small\", 19);\n    i0.ɵɵtemplate(2, LoginComponent_div_22_small_2_Template, 3, 0, \"small\", 19);\n    i0.ɵɵtemplate(3, LoginComponent_div_22_small_3_Template, 3, 0, \"small\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    let tmp_2_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r1.loginForm.get(\"password\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"pattern\"]);\n  }\n}\nexport class LoginComponent {\n  constructor(fb, authService, router, messageService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.messageService = messageService;\n    this.showPassword = false;\n    this.loginForm = this.fb.group({\n      userName: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20), Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]*$/)]],\n      password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.*[A-Z])(?=.*[!@#$&*])[^\\s]*$/)]]\n    });\n  }\n  // Cambia la visibilidad de la contraseña\n  togglePasswordVisibility() {\n    this.showPassword = !this.showPassword;\n  }\n  onLogin() {\n    if (this.loginForm.valid) {\n      this.authService.login(this.loginForm.value.userName, this.loginForm.value.password).subscribe({\n        next: response => {\n          if (response.body) {\n            this.router.navigate(['/dashboard']).then(navigationResult => {\n              if (navigationResult) {\n                console.log('Navigation to dashboard successful');\n              } else {\n                console.error('Navigation to dashboard failed');\n              }\n            }).catch(error => {\n              console.error('Navigation error:', error);\n            });\n          }\n        },\n        error: error => {\n          console.error('Error during login', error);\n          this.messageService.add({\n            severity: 'error',\n            summary: 'Problemas en el inicio de sesión',\n            detail: error.message || 'Error desconocido durante el inicio de sesión'\n          });\n        }\n      });\n    } else {\n      console.error('Form is not valid', this.loginForm.errors);\n      this.messageService.add({\n        severity: 'warn',\n        summary: '¡Tenemos un problema!',\n        detail: 'Formulario inválido: ' + JSON.stringify(this.loginForm.errors)\n      });\n    }\n  }\n  // Redirige al usuario a la página de recuperación de contraseña\n  onForgotPassword() {\n    this.router.navigate(['/recover-password']).then(() => {\n      console.log('Redireccionado a la página de recuperación de contraseña');\n      this.messageService.add({\n        severity: 'info',\n        summary: '¡Todo está bien!',\n        detail: 'Redireccionado a la página de recuperación de contraseña'\n      });\n    }).catch(err => {\n      console.error('Error al redirigir a la página de recuperación de contraseña', err);\n      this.messageService.add({\n        severity: 'warn',\n        summary: '¡Tenemos un problema!',\n        detail: 'Error al redirigir a la página de recuperación de contraseña'\n      });\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.MessageService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  features: [i0.ɵɵProvidersFeature([MessageService])],\n  decls: 28,\n  vars: 6,\n  consts: [[\"position\", \"bottom-right\"], [1, \"surface-ground\", \"flex\", \"align-items-center\", \"justify-content-center\", \"min-h-screen\", \"min-w-screen\", \"overflow-hidden\"], [1, \"flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\"], [2, \"border-radius\", \"56px\", \"padding\", \"0.3rem\", \"background\", \"linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%)\"], [1, \"w-full\", \"surface-card\", \"py-8\", \"px-5\", \"sm:px-8\", 2, \"border-radius\", \"53px\"], [1, \"text-center\", \"mb-5\"], [1, \"text-900\", \"text-3xl\", \"font-medium\", \"mb-3\"], [1, \"text-600\", \"font-medium\"], [1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [1, \"field\", \"col-12\", \"sm:col-12\", \"md:col-12\", \"xl:col-12\"], [\"for\", \"userName\", 1, \"block\", \"text-900\", \"text-xl\", \"font-medium\", \"mb-2\"], [\"type\", \"text\", \"id\", \"userName\", \"formControlName\", \"userName\", \"placeholder\", \"Ingresa tu nombre de usuario\", \"pInputText\", \"\", 1, \"w-full\", \"md:w-30rem\", \"mb-5\", 2, \"padding\", \"1rem\"], [4, \"ngIf\"], [\"for\", \"password\", 1, \"block\", \"text-900\", \"text-xl\", \"font-medium\", \"mb-2\"], [\"id\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"Ingresa tu contrase\\u00F1a\", \"pInputText\", \"\", 1, \"w-full\", \"md:w-30rem\", \"mb-5\", 2, \"padding\", \"1rem\", 3, \"type\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Acceder\", \"type\", \"submit\", 1, \"w-full\", \"p-3\", \"text-xl\", 3, \"disabled\"], [1, \"forgot-link\", \"text-right\"], [3, \"routerLink\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"p-toast\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n      i0.ɵɵtext(7, \"Bienvenido\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"span\", 7);\n      i0.ɵɵtext(9, \"Inicia Sesi\\u00F3n para continuar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\")(11, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.onLogin();\n      });\n      i0.ɵɵelementStart(12, \"h2\", 9);\n      i0.ɵɵtext(13, \"Iniciar Sesi\\u00F3n\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 10)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Nombre de Usuario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵtemplate(18, LoginComponent_div_18_Template, 5, 4, \"div\", 13);\n      i0.ɵɵelementStart(19, \"label\", 14);\n      i0.ɵɵtext(20, \"Contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 15);\n      i0.ɵɵtemplate(22, LoginComponent_div_22_Template, 4, 3, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 10);\n      i0.ɵɵelement(24, \"button\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 17)(26, \"a\", 18);\n      i0.ɵɵtext(27, \"\\u00BFOlvidaste tu contrase\\u00F1a?\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.loginForm.get(\"userName\")) == null ? null : tmp_1_0.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.loginForm.get(\"password\")) == null ? null : tmp_3_0.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", \"/recover-password\");\n    }\n  },\n  dependencies: [i5.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n  styles: [\"[_nghost-%COMP%]     .pi-eye, [_nghost-%COMP%]     .pi-eye-slash {\\n  transform: scale(1.6);\\n  margin-right: 1rem;\\n  color: var(--primary-color) !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlld3MvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0VBRUkscUJBQUE7RUFDQSxrQkFBQTtFQUNBLHNDQUFBO0FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyI6aG9zdCA6Om5nLWRlZXAgLnBpLWV5ZSxcclxuOmhvc3QgOjpuZy1kZWVwIC5waS1leWUtc2xhc2gge1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjYpO1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xyXG4gICAgY29sb3I6IHZhcigtLXByaW1hcnktY29sb3IpICFpbXBvcnRhbnQ7XHJcbn1cclxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","MessageService","i0","LoginComponent","constructor","fb","authService","router","messageService","loginForm","group","userName","required","minLength","maxLength","pattern","password","togglePasswordVisibility","showPassword","onLogin","valid","login","value","subscribe","next","response","body","navigate","then","navigationResult","console","log","error","catch","add","severity","summary","detail","message","errors","JSON","stringify","onForgotPassword","err","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\desta\\Downloads\\FrontEnd\\src\\app\\views\\login\\login.component.ts","C:\\Users\\desta\\Downloads\\FrontEnd\\src\\app\\views\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../../service/auth/auth.service\";\nimport { Router } from \"@angular/router\";\nimport { MessageService } from \"primeng/api\";\nimport { HttpResponse } from \"@angular/common/http\";\nimport {UserDetails} from \"../../models/user-details.model\";\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss'],\n    providers: [MessageService]\n})\nexport class LoginComponent {\n    loginForm: FormGroup;\n    showPassword = false;\n\n    constructor(\n        private fb: FormBuilder,\n        private authService: AuthService,\n        private router: Router,\n        public messageService: MessageService\n    ) {\n        this.loginForm = this.fb.group({\n            userName: ['', [Validators.required, Validators.minLength(8), Validators.maxLength(20), Validators.pattern(/^(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]*$/)]],\n            password: ['', [Validators.required, Validators.minLength(8), Validators.pattern(/^(?=.*[A-Z])(?=.*[!@#$&*])[^\\s]*$/)]]\n        });\n    }\n\n    // Cambia la visibilidad de la contraseña\n    togglePasswordVisibility(): void {\n        this.showPassword = !this.showPassword;\n    }\n\n    onLogin(): void {\n        if (this.loginForm.valid) {\n            this.authService.login(this.loginForm.value.userName, this.loginForm.value.password)\n                .subscribe({\n                    next: (response: HttpResponse<any>) => {\n                        if (response.body) {\n                            this.router.navigate(['/dashboard']).then((navigationResult) => {\n                                if (navigationResult) {\n                                    console.log('Navigation to dashboard successful');\n                                } else {\n                                    console.error('Navigation to dashboard failed');\n                                }\n                            }).catch((error) => {\n                                console.error('Navigation error:', error);\n                            });\n                        }\n                    },\n                    error: (error: any) => {\n                        console.error('Error during login', error);\n                        this.messageService.add({\n                            severity: 'error',\n                            summary: 'Problemas en el inicio de sesión',\n                            detail: error.message || 'Error desconocido durante el inicio de sesión'\n                        });\n                    }\n                });\n        } else {\n            console.error('Form is not valid', this.loginForm.errors);\n            this.messageService.add({\n                severity: 'warn',\n                summary: '¡Tenemos un problema!',\n                detail: 'Formulario inválido: ' + JSON.stringify(this.loginForm.errors)\n            });\n        }\n    }\n\n\n\n\n\n    // Redirige al usuario a la página de recuperación de contraseña\n    onForgotPassword(): void {\n        this.router.navigate(['/recover-password'])\n            .then(() => {\n                console.log('Redireccionado a la página de recuperación de contraseña');\n                this.messageService.add({\n                    severity: 'info',\n                    summary: '¡Todo está bien!',\n                    detail: 'Redireccionado a la página de recuperación de contraseña'\n                });\n            })\n            .catch(err => {\n                console.error('Error al redirigir a la página de recuperación de contraseña', err);\n                this.messageService.add({\n                    severity: 'warn',\n                    summary: '¡Tenemos un problema!',\n                    detail: 'Error al redirigir a la página de recuperación de contraseña'\n                });\n            });\n    }\n}\n","<p-toast position=\"bottom-right\"></p-toast>\n<div class=\"surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden\">\n    <div class=\"flex flex-column align-items-center justify-content-center\">\n        <div\n            style=\"border-radius:56px; padding:0.3rem; background: linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%);\">\n            <div class=\"w-full surface-card py-8 px-5 sm:px-8\" style=\"border-radius:53px\">\n                <div class=\"text-center mb-5\">\n<!--                    <img src=\"assets/layout/images/logofarm-BL.png\" alt=\"Image\" height=\"100\" class=\"mb-3\">-->\n                    <div class=\"text-900 text-3xl font-medium mb-3\">Bienvenido</div>\n                    <span class=\"text-600 font-medium\">Inicia Sesión para continuar</span>\n                </div>\n\n                <div>\n                    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onLogin()\" class=\"login-form\">\n                        <h2 class=\"text-center\">Iniciar Sesión</h2>\n\n                        <!-- Usuario -->\n                        <!--                        <div class=\"form-group\">-->\n                        <div class=\"field col-12 sm:col-12 md:col-12 xl:col-12\">\n                            <label for=\"userName\" class=\"block text-900 text-xl font-medium mb-2\">Nombre de Usuario</label>\n\n                            <input type=\"text\" class=\"w-full md:w-30rem mb-5\" style=\"padding:1rem\" id=\"userName\"\n                                   formControlName=\"userName\" placeholder=\"Ingresa tu nombre de usuario\" pInputText\n                            />\n                            <!-- Errores para userName -->\n                            <div *ngIf=\"loginForm.get('userName')?.touched\">\n                                <small class=\"text-danger\" *ngIf=\"loginForm.get('userName')?.errors?.['required']\">\n                                    El nombre de usuario es obligatorio.<br/>\n                                </small>\n                                <small class=\"text-danger\" *ngIf=\"loginForm.get('userName')?.errors?.['minlength']\">\n                                    El nombre de usuario debe tener al menos 8 caracteres.<br/>\n                                </small>\n                                <small class=\"text-danger\" *ngIf=\"loginForm.get('userName')?.errors?.['maxlength']\">\n                                    El nombre de usuario no puede tener más de 20 caracteres.<br/>\n                                </small>\n                                <small class=\"text-danger\" *ngIf=\"loginForm.get('userName')?.errors?.['pattern']\">\n                                    El nombre de usuario debe contener al menos una letra mayúscula y un número.<br/>\n                                </small>\n                            </div>\n                            <!--                        </div>-->\n\n                            <!--                        &lt;!&ndash; Contraseña &ndash;&gt;-->\n                            <!--                        <div class=\"form-group position-relative\">-->\n                            <label for=\"password\" class=\"block text-900 text-xl font-medium mb-2\">Contraseña</label>\n\n                            <input [type]=\"showPassword ? 'text' : 'password'\" id=\"password\"\n                                   formControlName=\"password\" placeholder=\"Ingresa tu contraseña\" pInputText\n                                   class=\"w-full md:w-30rem mb-5\" style=\"padding:1rem\">\n                            <!-- Errores para password -->\n                            <div *ngIf=\"loginForm.get('password')?.touched\">\n                                <small class=\"text-danger\" *ngIf=\"loginForm.get('password')?.errors?.['required']\">\n                                    La contraseña es obligatoria.<br/>\n                                </small>\n                                <small class=\"text-danger\" *ngIf=\"loginForm.get('password')?.errors?.['minlength']\">\n                                    La contraseña debe tener al menos 8 caracteres.<br/>\n                                </small>\n                                <small class=\"text-danger\" *ngIf=\"loginForm.get('password')?.errors?.['pattern']\">\n                                    La contraseña debe contener al menos una letra mayúscula y un carácter especial.<br/>\n                                </small>\n                            </div>\n                        </div>\n\n                        <div class=\"field col-12 sm:col-12 md:col-12 xl:col-12\">\n                            <button pButton pRipple label=\"Acceder\" class=\"w-full p-3 text-xl\" type=\"submit\"  [disabled]=\"!loginForm.valid\"></button>\n                        </div>\n\n\n                        <div class=\"forgot-link text-right\">\n                            <a [routerLink]=\"'/recover-password'\">¿Olvidaste tu contraseña?</a>\n                        </div>\n                    </form>\n\n                    <!--                    <div class=\"field col-12 sm:col-12 md:col-12 xl:col-12\">-->\n                    <!--                        <label for=\"email1\" class=\"block text-900 text-xl font-medium mb-2\">Usuario</label>-->\n                    <!--                        <input id=\"email1\" type=\"text\" placeholder=\"Indique el Usuario\" pInputText-->\n                    <!--                               class=\"w-full md:w-30rem mb-5\" style=\"padding:1rem\"-->\n                    <!--                               [(ngModel)]=\"loginObject.usuario\">-->\n                    <!--&lt;!&ndash;                    </div>&ndash;&gt;-->\n                    <!--&lt;!&ndash;                    <div class=\"field col-12 sm:col-12 md:col-12 xl:col-12\">&ndash;&gt;-->\n                    <!--                        <label for=\"password1\" class=\"block text-900 font-medium text-xl mb-2\">Contraseña</label>-->\n                    <!--                        <input id=\"password1\" type=\"password\" placeholder=\"Indique la contraseña\" pInputText-->\n                    <!--                               class=\"w-full md:w-30rem mb-5\" style=\"padding:1rem\"-->\n                    <!--                               [(ngModel)]=\"loginObject.clave\">-->\n                    <!--                    </div>-->\n                    <!--                    <div class=\"field col-12 sm:col-12 md:col-12 xl:col-12\">-->\n                    <!--                        <button pButton pRipple label=\"Acceder\" class=\"w-full p-3 text-xl\" (click)=\"login2()\" ></button>-->\n                    <!--                    </div>-->\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}