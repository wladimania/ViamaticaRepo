{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs';\nimport { AppSidebarComponent } from \"./app.sidebar.component\";\nimport { AppTopBarComponent } from './app.topbar.component';\nlet AppLayoutComponent = class AppLayoutComponent {\n  constructor(layoutService, renderer, router) {\n    this.layoutService = layoutService;\n    this.renderer = renderer;\n    this.router = router;\n    this.overlayMenuOpenSubscription = this.layoutService.overlayOpen$.subscribe(() => {\n      if (!this.menuOutsideClickListener) {\n        this.menuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n          const isOutsideClicked = !(this.appSidebar.el.nativeElement.isSameNode(event.target) || this.appSidebar.el.nativeElement.contains(event.target) || this.appTopbar.menuButton.nativeElement.isSameNode(event.target) || this.appTopbar.menuButton.nativeElement.contains(event.target));\n          if (isOutsideClicked) {\n            this.hideMenu();\n          }\n        });\n      }\n      if (!this.profileMenuOutsideClickListener) {\n        this.profileMenuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n          const isOutsideClicked = !(this.appTopbar.menu.nativeElement.isSameNode(event.target) || this.appTopbar.menu.nativeElement.contains(event.target) || this.appTopbar.topbarMenuButton.nativeElement.isSameNode(event.target) || this.appTopbar.topbarMenuButton.nativeElement.contains(event.target));\n          if (isOutsideClicked) {\n            this.hideProfileMenu();\n          }\n        });\n      }\n      if (this.layoutService.state.staticMenuMobileActive) {\n        this.blockBodyScroll();\n      }\n    });\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(() => {\n      this.hideMenu();\n      this.hideProfileMenu();\n    });\n  }\n  hideMenu() {\n    this.layoutService.state.overlayMenuActive = false;\n    this.layoutService.state.staticMenuMobileActive = false;\n    this.layoutService.state.menuHoverActive = false;\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n      this.menuOutsideClickListener = null;\n    }\n    this.unblockBodyScroll();\n  }\n  hideProfileMenu() {\n    this.layoutService.state.profileSidebarVisible = false;\n    if (this.profileMenuOutsideClickListener) {\n      this.profileMenuOutsideClickListener();\n      this.profileMenuOutsideClickListener = null;\n    }\n  }\n  blockBodyScroll() {\n    if (document.body.classList) {\n      document.body.classList.add('blocked-scroll');\n    } else {\n      document.body.className += ' blocked-scroll';\n    }\n  }\n  unblockBodyScroll() {\n    if (document.body.classList) {\n      document.body.classList.remove('blocked-scroll');\n    } else {\n      document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' + 'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n    }\n  }\n  get containerClass() {\n    return {\n      'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n      'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n      'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n      'layout-static': this.layoutService.config.menuMode === 'static',\n      'layout-static-inactive': this.layoutService.state.staticMenuDesktopInactive && this.layoutService.config.menuMode === 'static',\n      'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n      'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n      'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n      'p-ripple-disabled': !this.layoutService.config.ripple\n    };\n  }\n  ngOnDestroy() {\n    if (this.overlayMenuOpenSubscription) {\n      this.overlayMenuOpenSubscription.unsubscribe();\n    }\n    if (this.menuOutsideClickListener) {\n      this.menuOutsideClickListener();\n    }\n  }\n};\n__decorate([ViewChild(AppSidebarComponent)], AppLayoutComponent.prototype, \"appSidebar\", void 0);\n__decorate([ViewChild(AppTopBarComponent)], AppLayoutComponent.prototype, \"appTopbar\", void 0);\nAppLayoutComponent = __decorate([Component({\n  selector: 'app-layout',\n  templateUrl: './app.layout.component.html'\n})], AppLayoutComponent);\nexport { AppLayoutComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,EAAwBC,SAAS,QAAQ,eAAe;AAC1E,SAASC,aAAa,QAAgB,iBAAiB;AACvD,SAASC,MAAM,QAAsB,MAAM;AAE3C,SAASC,mBAAmB,QAAQ,yBAAyB;AAC7D,SAASC,kBAAkB,QAAQ,wBAAwB;AAMpD,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAY3BC,YAAmBC,aAA4B,EAASC,QAAmB,EAASC,MAAc;IAA/E,kBAAa,GAAbF,aAAa;IAAwB,aAAQ,GAARC,QAAQ;IAAoB,WAAM,GAANC,MAAM;IACtF,IAAI,CAACC,2BAA2B,GAAG,IAAI,CAACH,aAAa,CAACI,YAAY,CAACC,SAAS,CAAC,MAAK;MAC9E,IAAI,CAAC,IAAI,CAACC,wBAAwB,EAAE;QAChC,IAAI,CAACA,wBAAwB,GAAG,IAAI,CAACL,QAAQ,CAACM,MAAM,CAAC,UAAU,EAAE,OAAO,EAAEC,KAAK,IAAG;UAC9E,MAAMC,gBAAgB,GAAG,EAAE,IAAI,CAACC,UAAU,CAACC,EAAE,CAACC,aAAa,CAACC,UAAU,CAACL,KAAK,CAACM,MAAM,CAAC,IAAI,IAAI,CAACJ,UAAU,CAACC,EAAE,CAACC,aAAa,CAACG,QAAQ,CAACP,KAAK,CAACM,MAAM,CAAC,IACxI,IAAI,CAACE,SAAS,CAACC,UAAU,CAACL,aAAa,CAACC,UAAU,CAACL,KAAK,CAACM,MAAM,CAAC,IAAI,IAAI,CAACE,SAAS,CAACC,UAAU,CAACL,aAAa,CAACG,QAAQ,CAACP,KAAK,CAACM,MAAM,CAAC,CAAC;UAE1I,IAAIL,gBAAgB,EAAE;YAClB,IAAI,CAACS,QAAQ,EAAE;;QAEvB,CAAC,CAAC;;MAGN,IAAI,CAAC,IAAI,CAACC,+BAA+B,EAAE;QACvC,IAAI,CAACA,+BAA+B,GAAG,IAAI,CAAClB,QAAQ,CAACM,MAAM,CAAC,UAAU,EAAE,OAAO,EAAEC,KAAK,IAAG;UACrF,MAAMC,gBAAgB,GAAG,EAAE,IAAI,CAACO,SAAS,CAACI,IAAI,CAACR,aAAa,CAACC,UAAU,CAACL,KAAK,CAACM,MAAM,CAAC,IAAI,IAAI,CAACE,SAAS,CAACI,IAAI,CAACR,aAAa,CAACG,QAAQ,CAACP,KAAK,CAACM,MAAM,CAAC,IAC1I,IAAI,CAACE,SAAS,CAACK,gBAAgB,CAACT,aAAa,CAACC,UAAU,CAACL,KAAK,CAACM,MAAM,CAAC,IAAI,IAAI,CAACE,SAAS,CAACK,gBAAgB,CAACT,aAAa,CAACG,QAAQ,CAACP,KAAK,CAACM,MAAM,CAAC,CAAC;UAEtJ,IAAIL,gBAAgB,EAAE;YAClB,IAAI,CAACa,eAAe,EAAE;;QAE9B,CAAC,CAAC;;MAGN,IAAI,IAAI,CAACtB,aAAa,CAACuB,KAAK,CAACC,sBAAsB,EAAE;QACjD,IAAI,CAACC,eAAe,EAAE;;IAE9B,CAAC,CAAC;IAEF,IAAI,CAACvB,MAAM,CAACwB,MAAM,CAACC,IAAI,CAAChC,MAAM,CAACa,KAAK,IAAIA,KAAK,YAAYd,aAAa,CAAC,CAAC,CACnEW,SAAS,CAAC,MAAK;MACZ,IAAI,CAACa,QAAQ,EAAE;MACf,IAAI,CAACI,eAAe,EAAE;IAC1B,CAAC,CAAC;EACV;EAEAJ,QAAQ;IACJ,IAAI,CAAClB,aAAa,CAACuB,KAAK,CAACK,iBAAiB,GAAG,KAAK;IAClD,IAAI,CAAC5B,aAAa,CAACuB,KAAK,CAACC,sBAAsB,GAAG,KAAK;IACvD,IAAI,CAACxB,aAAa,CAACuB,KAAK,CAACM,eAAe,GAAG,KAAK;IAChD,IAAI,IAAI,CAACvB,wBAAwB,EAAE;MAC/B,IAAI,CAACA,wBAAwB,EAAE;MAC/B,IAAI,CAACA,wBAAwB,GAAG,IAAI;;IAExC,IAAI,CAACwB,iBAAiB,EAAE;EAC5B;EAEAR,eAAe;IACX,IAAI,CAACtB,aAAa,CAACuB,KAAK,CAACQ,qBAAqB,GAAG,KAAK;IACtD,IAAI,IAAI,CAACZ,+BAA+B,EAAE;MACtC,IAAI,CAACA,+BAA+B,EAAE;MACtC,IAAI,CAACA,+BAA+B,GAAG,IAAI;;EAEnD;EAEAM,eAAe;IACX,IAAIO,QAAQ,CAACC,IAAI,CAACC,SAAS,EAAE;MACzBF,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,gBAAgB,CAAC;KAChD,MACI;MACDH,QAAQ,CAACC,IAAI,CAACG,SAAS,IAAI,iBAAiB;;EAEpD;EAEAN,iBAAiB;IACb,IAAIE,QAAQ,CAACC,IAAI,CAACC,SAAS,EAAE;MACzBF,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACG,MAAM,CAAC,gBAAgB,CAAC;KACnD,MACI;MACDL,QAAQ,CAACC,IAAI,CAACG,SAAS,GAAGJ,QAAQ,CAACC,IAAI,CAACG,SAAS,CAACE,OAAO,CAAC,IAAIC,MAAM,CAAC,SAAS,GAC1E,gBAAgB,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,GAAG,SAAS,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC;;EAE1E;EAEA,IAAIC,cAAc;IACd,OAAO;MACH,oBAAoB,EAAE,IAAI,CAAC1C,aAAa,CAAC2C,MAAM,CAACC,WAAW,KAAK,OAAO;MACvE,mBAAmB,EAAE,IAAI,CAAC5C,aAAa,CAAC2C,MAAM,CAACC,WAAW,KAAK,MAAM;MACrE,gBAAgB,EAAE,IAAI,CAAC5C,aAAa,CAAC2C,MAAM,CAACE,QAAQ,KAAK,SAAS;MAClE,eAAe,EAAE,IAAI,CAAC7C,aAAa,CAAC2C,MAAM,CAACE,QAAQ,KAAK,QAAQ;MAChE,wBAAwB,EAAE,IAAI,CAAC7C,aAAa,CAACuB,KAAK,CAACuB,yBAAyB,IAAI,IAAI,CAAC9C,aAAa,CAAC2C,MAAM,CAACE,QAAQ,KAAK,QAAQ;MAC/H,uBAAuB,EAAE,IAAI,CAAC7C,aAAa,CAACuB,KAAK,CAACK,iBAAiB;MACnE,sBAAsB,EAAE,IAAI,CAAC5B,aAAa,CAACuB,KAAK,CAACC,sBAAsB;MACvE,gBAAgB,EAAE,IAAI,CAACxB,aAAa,CAAC2C,MAAM,CAACI,UAAU,KAAK,QAAQ;MACnE,mBAAmB,EAAE,CAAC,IAAI,CAAC/C,aAAa,CAAC2C,MAAM,CAACK;KACnD;EACL;EAEAC,WAAW;IACP,IAAI,IAAI,CAAC9C,2BAA2B,EAAE;MAClC,IAAI,CAACA,2BAA2B,CAAC+C,WAAW,EAAE;;IAGlD,IAAI,IAAI,CAAC5C,wBAAwB,EAAE;MAC/B,IAAI,CAACA,wBAAwB,EAAE;;EAEvC;CACH;AArGmC6C,YAA/B1D,SAAS,CAACG,mBAAmB,CAAC,sDAAkC;AAElCuD,YAA9B1D,SAAS,CAACI,kBAAkB,CAAC,qDAAgC;AAVrDC,kBAAkB,eAJ9BN,SAAS,CAAC;EACP4D,QAAQ,EAAE,YAAY;EACtBC,WAAW,EAAE;CAChB,CAAC,GACWvD,kBAAkB,CA6G9B;SA7GYA,kBAAkB","names":["Component","ViewChild","NavigationEnd","filter","AppSidebarComponent","AppTopBarComponent","AppLayoutComponent","constructor","layoutService","renderer","router","overlayMenuOpenSubscription","overlayOpen$","subscribe","menuOutsideClickListener","listen","event","isOutsideClicked","appSidebar","el","nativeElement","isSameNode","target","contains","appTopbar","menuButton","hideMenu","profileMenuOutsideClickListener","menu","topbarMenuButton","hideProfileMenu","state","staticMenuMobileActive","blockBodyScroll","events","pipe","overlayMenuActive","menuHoverActive","unblockBodyScroll","profileSidebarVisible","document","body","classList","add","className","remove","replace","RegExp","split","join","containerClass","config","colorScheme","menuMode","staticMenuDesktopInactive","inputStyle","ripple","ngOnDestroy","unsubscribe","__decorate","selector","templateUrl"],"sourceRoot":"","sources":["C:\\Users\\desta\\Downloads\\FrontEnd\\src\\app\\layout\\app.layout.component.ts"],"sourcesContent":["import { Component, OnDestroy, Renderer2, ViewChild } from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { filter, Subscription } from 'rxjs';\nimport { LayoutService } from \"./service/app.layout.service\";\nimport { AppSidebarComponent } from \"./app.sidebar.component\";\nimport { AppTopBarComponent } from './app.topbar.component';\n\n@Component({\n    selector: 'app-layout',\n    templateUrl: './app.layout.component.html'\n})\nexport class AppLayoutComponent implements OnDestroy {\n\n    overlayMenuOpenSubscription: Subscription;\n\n    menuOutsideClickListener: any;\n\n    profileMenuOutsideClickListener: any;\n\n    @ViewChild(AppSidebarComponent) appSidebar!: AppSidebarComponent;\n\n    @ViewChild(AppTopBarComponent) appTopbar!: AppTopBarComponent;\n\n    constructor(public layoutService: LayoutService, public renderer: Renderer2, public router: Router) {\n        this.overlayMenuOpenSubscription = this.layoutService.overlayOpen$.subscribe(() => {\n            if (!this.menuOutsideClickListener) {\n                this.menuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n                    const isOutsideClicked = !(this.appSidebar.el.nativeElement.isSameNode(event.target) || this.appSidebar.el.nativeElement.contains(event.target) \n                        || this.appTopbar.menuButton.nativeElement.isSameNode(event.target) || this.appTopbar.menuButton.nativeElement.contains(event.target));\n                    \n                    if (isOutsideClicked) {\n                        this.hideMenu();\n                    }\n                });\n            }\n\n            if (!this.profileMenuOutsideClickListener) {\n                this.profileMenuOutsideClickListener = this.renderer.listen('document', 'click', event => {\n                    const isOutsideClicked = !(this.appTopbar.menu.nativeElement.isSameNode(event.target) || this.appTopbar.menu.nativeElement.contains(event.target)\n                        || this.appTopbar.topbarMenuButton.nativeElement.isSameNode(event.target) || this.appTopbar.topbarMenuButton.nativeElement.contains(event.target));\n\n                    if (isOutsideClicked) {\n                        this.hideProfileMenu();\n                    }\n                });\n            }\n\n            if (this.layoutService.state.staticMenuMobileActive) {\n                this.blockBodyScroll();\n            }\n        });\n\n        this.router.events.pipe(filter(event => event instanceof NavigationEnd))\n            .subscribe(() => {\n                this.hideMenu();\n                this.hideProfileMenu();\n            });\n    }\n\n    hideMenu() {\n        this.layoutService.state.overlayMenuActive = false;\n        this.layoutService.state.staticMenuMobileActive = false;\n        this.layoutService.state.menuHoverActive = false;\n        if (this.menuOutsideClickListener) {\n            this.menuOutsideClickListener();\n            this.menuOutsideClickListener = null;\n        }\n        this.unblockBodyScroll();\n    }\n\n    hideProfileMenu() {\n        this.layoutService.state.profileSidebarVisible = false;\n        if (this.profileMenuOutsideClickListener) {\n            this.profileMenuOutsideClickListener();\n            this.profileMenuOutsideClickListener = null;\n        }\n    }\n\n    blockBodyScroll(): void {\n        if (document.body.classList) {\n            document.body.classList.add('blocked-scroll');\n        }\n        else {\n            document.body.className += ' blocked-scroll';\n        }\n    }\n\n    unblockBodyScroll(): void {\n        if (document.body.classList) {\n            document.body.classList.remove('blocked-scroll');\n        }\n        else {\n            document.body.className = document.body.className.replace(new RegExp('(^|\\\\b)' +\n                'blocked-scroll'.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n        }\n    }\n\n    get containerClass() {\n        return {\n            'layout-theme-light': this.layoutService.config.colorScheme === 'light',\n            'layout-theme-dark': this.layoutService.config.colorScheme === 'dark',\n            'layout-overlay': this.layoutService.config.menuMode === 'overlay',\n            'layout-static': this.layoutService.config.menuMode === 'static',\n            'layout-static-inactive': this.layoutService.state.staticMenuDesktopInactive && this.layoutService.config.menuMode === 'static',\n            'layout-overlay-active': this.layoutService.state.overlayMenuActive,\n            'layout-mobile-active': this.layoutService.state.staticMenuMobileActive,\n            'p-input-filled': this.layoutService.config.inputStyle === 'filled',\n            'p-ripple-disabled': !this.layoutService.config.ripple\n        }\n    }\n\n    ngOnDestroy() {\n        if (this.overlayMenuOpenSubscription) {\n            this.overlayMenuOpenSubscription.unsubscribe();\n        }\n\n        if (this.menuOutsideClickListener) {\n            this.menuOutsideClickListener();\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}