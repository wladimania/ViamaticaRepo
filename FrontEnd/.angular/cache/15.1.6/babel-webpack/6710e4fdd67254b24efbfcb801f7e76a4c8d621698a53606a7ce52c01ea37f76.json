{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport { DialogService } from \"primeng/dynamicdialog\";\nimport { MessageService } from \"primeng/api\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../service/auth/auth.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/router\";\nfunction RecoverPasswordComponent_div_18_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" El correo electr\\u00F3nico es obligatorio. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RecoverPasswordComponent_div_18_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" Debes ingresar un correo electr\\u00F3nico v\\u00E1lido. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RecoverPasswordComponent_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RecoverPasswordComponent_div_18_small_1_Template, 2, 0, \"small\", 19);\n    i0.ɵɵtemplate(2, RecoverPasswordComponent_div_18_small_2_Template, 2, 0, \"small\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r0.recoverForm.get(\"email\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.recoverForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"email\"]);\n  }\n}\nfunction RecoverPasswordComponent_div_22_small_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" La contrase\\u00F1a es obligatoria. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RecoverPasswordComponent_div_22_small_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 20);\n    i0.ɵɵtext(1, \" La contrase\\u00F1a debe tener al menos 8 caracteres. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RecoverPasswordComponent_div_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, RecoverPasswordComponent_div_22_small_1_Template, 2, 0, \"small\", 19);\n    i0.ɵɵtemplate(2, RecoverPasswordComponent_div_22_small_2_Template, 2, 0, \"small\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    let tmp_0_0;\n    let tmp_1_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_0_0 = ctx_r1.recoverForm.get(\"newPassword\")) == null ? null : tmp_0_0.errors == null ? null : tmp_0_0.errors[\"required\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r1.recoverForm.get(\"newPassword\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"minlength\"]);\n  }\n}\nexport class RecoverPasswordComponent {\n  constructor(fb, authService, messageService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.messageService = messageService;\n    this.showPassword = false;\n    this.recoverForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      newPassword: ['', [Validators.required, Validators.minLength(8)]]\n    });\n  }\n  onSubmitRecover() {\n    var _a, _b;\n    const email = (_a = this.recoverForm.get('email')) === null || _a === void 0 ? void 0 : _a.value;\n    const newPassword = (_b = this.recoverForm.get('newPassword')) === null || _b === void 0 ? void 0 : _b.value;\n    if (email && newPassword && this.recoverForm.valid) {\n      this.authService.cambiarContrasena(email, newPassword).subscribe({\n        next: response => {\n          console.log('Contraseña actualizada correctamente.', response);\n          // alert('Tu contraseña ha sido actualizada correctamente.');\n          this.messageService.add({\n            severity: 'success',\n            summary: '¡Todo bien!',\n            detail: 'Tu contraseña ha sido actualizada correctamente.'\n          });\n        },\n        error: error => {\n          var _a;\n          console.error('Error:', error);\n          // alert('Error al cambiar la contraseña. Por favor, verifica los datos e intenta de nuevo.');\n          this.messageService.add({\n            severity: 'error',\n            summary: '¡Hubo un problema!',\n            detail: 'Error al cambiar la contraseña. Por favor, verifica los datos e intenta de nuevo.' + ((_a = error === null || error === void 0 ? void 0 : error.error) === null || _a === void 0 ? void 0 : _a.text)\n          });\n        }\n      });\n    } else {\n      // alert('Por favor, asegúrate de que todos los campos están correctamente llenados y validados.');\n      this.messageService.add({\n        severity: 'warn',\n        summary: '¡Hubo un problema!',\n        detail: 'Por favor, asegúrate de que todos los campos están correctamente llenados y validados.'\n      });\n    }\n  }\n}\nRecoverPasswordComponent.ɵfac = function RecoverPasswordComponent_Factory(t) {\n  return new (t || RecoverPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.MessageService));\n};\nRecoverPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RecoverPasswordComponent,\n  selectors: [[\"app-recover-password\"]],\n  features: [i0.ɵɵProvidersFeature([DialogService, MessageService])],\n  decls: 28,\n  vars: 6,\n  consts: [[\"position\", \"bottom-right\"], [1, \"surface-ground\", \"flex\", \"align-items-center\", \"justify-content-center\", \"min-h-screen\", \"min-w-screen\", \"overflow-hidden\"], [1, \"flex\", \"flex-column\", \"align-items-center\", \"justify-content-center\"], [2, \"border-radius\", \"56px\", \"padding\", \"0.3rem\", \"background\", \"linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%)\"], [1, \"w-full\", \"surface-card\", \"py-8\", \"px-5\", \"sm:px-8\", 2, \"border-radius\", \"53px\"], [1, \"text-center\", \"mb-5\"], [1, \"text-900\", \"text-3xl\", \"font-medium\", \"mb-3\"], [1, \"text-600\", \"font-medium\"], [1, \"login-form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\"], [1, \"field\", \"col-12\", \"sm:col-12\", \"md:col-12\", \"xl:col-12\"], [\"for\", \"email\", 1, \"block\", \"text-900\", \"text-xl\", \"font-medium\", \"mb-2\"], [\"type\", \"text\", \"id\", \"email\", \"formControlName\", \"userName\", \"placeholder\", \"Ingresa tu correo electr\\u00F3nico\", \"pInputText\", \"\", 1, \"w-full\", \"md:w-30rem\", \"mb-5\", 2, \"padding\", \"1rem\"], [4, \"ngIf\"], [\"for\", \"newPassword\", 1, \"block\", \"text-900\", \"text-xl\", \"font-medium\", \"mb-2\"], [\"id\", \"newPassword\", \"formControlName\", \"password\", \"placeholder\", \"Ingresa tu nueva contrase\\u00F1a\", \"pInputText\", \"\", 1, \"w-full\", \"md:w-30rem\", \"mb-5\", 2, \"padding\", \"1rem\", 3, \"type\"], [\"pButton\", \"\", \"pRipple\", \"\", \"label\", \"Recuperar Cuenta\", \"type\", \"submit\", 1, \"w-full\", \"p-3\", \"text-xl\", 3, \"disabled\"], [1, \"forgot-link\", \"text-right\"], [3, \"routerLink\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function RecoverPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelement(0, \"p-toast\", 0);\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n      i0.ɵɵtext(7, \"Bienvenido\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"span\", 7);\n      i0.ɵɵtext(9, \"Inicia Sesi\\u00F3n para continuar\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\")(11, \"form\", 8);\n      i0.ɵɵlistener(\"ngSubmit\", function RecoverPasswordComponent_Template_form_ngSubmit_11_listener() {\n        return ctx.onSubmitRecover();\n      });\n      i0.ɵɵelementStart(12, \"h2\", 9);\n      i0.ɵɵtext(13, \"Recuperar Contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"div\", 10)(15, \"label\", 11);\n      i0.ɵɵtext(16, \"Correo Electr\\u00F3nico\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 12);\n      i0.ɵɵtemplate(18, RecoverPasswordComponent_div_18_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementStart(19, \"label\", 14);\n      i0.ɵɵtext(20, \"Nueva Contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 15);\n      i0.ɵɵtemplate(22, RecoverPasswordComponent_div_22_Template, 3, 2, \"div\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"div\", 10);\n      i0.ɵɵelement(24, \"button\", 16);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 17)(26, \"a\", 18);\n      i0.ɵɵtext(27, \"Volver al inicio de sesi\\u00F3n\");\n      i0.ɵɵelementEnd()()()()()()()();\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_3_0;\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.recoverForm);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx.recoverForm.get(\"email\")) == null ? null : tmp_1_0.touched);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"type\", ctx.showPassword ? \"text\" : \"password\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx.recoverForm.get(\"newPassword\")) == null ? null : tmp_3_0.touched);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", !ctx.recoverForm.valid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"routerLink\", \"/login\");\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i5.RouterLink],\n  styles: [\"[_nghost-%COMP%]     .pi-eye, [_nghost-%COMP%]     .pi-eye-slash {\\n  transform: scale(1.6);\\n  margin-right: 1rem;\\n  color: var(--primary-color) !important;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvdmlld3MvcmVjb3Zlci1wYXNzd29yZC9yZWNvdmVyLXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztFQUVJLHFCQUFBO0VBQ0Esa0JBQUE7RUFDQSxzQ0FBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5waS1leWUsXHJcbjpob3N0IDo6bmctZGVlcCAucGktZXllLXNsYXNoIHtcclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS42KTtcclxuICAgIG1hcmdpbi1yaWdodDogMXJlbTtcclxuICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWNvbG9yKSAhaW1wb3J0YW50O1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","DialogService","MessageService","i0","RecoverPasswordComponent","constructor","fb","authService","messageService","group","email","required","newPassword","minLength","onSubmitRecover","recoverForm","get","value","valid","cambiarContrasena","subscribe","next","response","console","log","add","severity","summary","detail","error","text","selectors","features","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\desta\\Downloads\\FrontEnd\\src\\app\\views\\recover-password\\recover-password.component.ts","C:\\Users\\desta\\Downloads\\FrontEnd\\src\\app\\views\\recover-password\\recover-password.component.html"],"sourcesContent":["import {Component} from '@angular/core';\nimport {FormBuilder, Validators} from \"@angular/forms\";\nimport {AuthService} from \"../../service/auth/auth.service\";\nimport {DialogService} from \"primeng/dynamicdialog\";\nimport {MessageService} from \"primeng/api\";\n\n@Component({\n    selector: 'app-recover-password',\n    templateUrl: './recover-password.component.html',\n    styleUrls: ['./recover-password.component.scss'],\n    providers: [DialogService, MessageService]\n})\nexport class RecoverPasswordComponent {\n\n    showPassword = false;\n\n    public recoverForm = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        newPassword: ['', [Validators.required, Validators.minLength(8)]]\n    });\n\n    constructor(private fb: FormBuilder,\n                private authService: AuthService,\n                private messageService: MessageService) {\n    }\n\n    onSubmitRecover(): void {\n        const email = this.recoverForm.get('email')?.value;\n        const newPassword = this.recoverForm.get('newPassword')?.value;\n\n        if (email && newPassword && this.recoverForm.valid) {\n            this.authService.cambiarContrasena(email, newPassword).subscribe({\n                next: (response: any) => {\n                    console.log('Contraseña actualizada correctamente.', response);\n                    // alert('Tu contraseña ha sido actualizada correctamente.');\n                    this.messageService.add({\n                        severity: 'success',\n                        summary: '¡Todo bien!',\n                        detail: 'Tu contraseña ha sido actualizada correctamente.'\n                    });\n                },\n                error: (error: any) => {\n                    console.error('Error:', error);\n                    // alert('Error al cambiar la contraseña. Por favor, verifica los datos e intenta de nuevo.');\n                    this.messageService.add({\n                        severity: 'error',\n                        summary: '¡Hubo un problema!',\n                        detail: 'Error al cambiar la contraseña. Por favor, verifica los datos e intenta de nuevo.' + error?.error?.text\n                    });\n                }\n            });\n        } else {\n            // alert('Por favor, asegúrate de que todos los campos están correctamente llenados y validados.');\n            this.messageService.add({\n                severity: 'warn',\n                summary: '¡Hubo un problema!',\n                detail: 'Por favor, asegúrate de que todos los campos están correctamente llenados y validados.'\n            });\n        }\n    }\n}\n","<p-toast position=\"bottom-right\"></p-toast>\n<div class=\"surface-ground flex align-items-center justify-content-center min-h-screen min-w-screen overflow-hidden\">\n    <div class=\"flex flex-column align-items-center justify-content-center\">\n        <div\n            style=\"border-radius:56px; padding:0.3rem; background: linear-gradient(180deg, var(--primary-color) 10%, rgba(33, 150, 243, 0) 30%);\">\n            <div class=\"w-full surface-card py-8 px-5 sm:px-8\" style=\"border-radius:53px\">\n                <div class=\"text-center mb-5\">\n<!--                    <img src=\"assets/layout/images/logofarm-BL.png\" alt=\"Image\" height=\"100\" class=\"mb-3\">-->\n                    <div class=\"text-900 text-3xl font-medium mb-3\">Bienvenido</div>\n                    <span class=\"text-600 font-medium\">Inicia Sesión para continuar</span>\n                </div>\n\n                <div>\n                    <form (ngSubmit)=\"onSubmitRecover()\" [formGroup]=\"recoverForm\" class=\"login-form\">\n                        <h2 class=\"text-center\">Recuperar Contraseña</h2>\n\n                        <!-- Usuario -->\n                        <!--                        <div class=\"form-group\">-->\n                        <div class=\"field col-12 sm:col-12 md:col-12 xl:col-12\">\n                            <label for=\"email\" class=\"block text-900 text-xl font-medium mb-2\">Correo Electrónico</label>\n\n                            <input type=\"text\" class=\"w-full md:w-30rem mb-5\" style=\"padding:1rem\" id=\"email\"\n                                   formControlName=\"userName\" placeholder=\"Ingresa tu correo electrónico\" pInputText\n                            />\n                            <!-- Errores para userName -->\n                            <div *ngIf=\"recoverForm.get('email')?.touched\">\n                                <small class=\"text-danger\" *ngIf=\"recoverForm.get('email')?.errors?.['required']\">\n                                    El correo electrónico es obligatorio.\n                                </small>\n                                <small class=\"text-danger\" *ngIf=\"recoverForm.get('email')?.errors?.['email']\">\n                                    Debes ingresar un correo electrónico válido.\n                                </small>\n                            </div>\n                            <label for=\"newPassword\" class=\"block text-900 text-xl font-medium mb-2\">Nueva Contraseña</label>\n\n                            <input [type]=\"showPassword ? 'text' : 'password'\" id=\"newPassword\"\n                                   formControlName=\"password\" placeholder=\"Ingresa tu nueva contraseña\" pInputText\n                                   class=\"w-full md:w-30rem mb-5\" style=\"padding:1rem\">\n                            <!-- Errores para password -->\n                            <div *ngIf=\"recoverForm.get('newPassword')?.touched\">\n                                <small class=\"text-danger\" *ngIf=\"recoverForm.get('newPassword')?.errors?.['required']\">\n                                    La contraseña es obligatoria.\n                                </small>\n                                <small class=\"text-danger\" *ngIf=\"recoverForm.get('newPassword')?.errors?.['minlength']\">\n                                    La contraseña debe tener al menos 8 caracteres.\n                                </small>\n                            </div>\n                        </div>\n                        <div class=\"field col-12 sm:col-12 md:col-12 xl:col-12\">\n                            <button pButton pRipple label=\"Recuperar Cuenta\" class=\"w-full p-3 text-xl\" type=\"submit\" [disabled]=\"!recoverForm.valid\"></button>\n                        </div>\n                        <div class=\"forgot-link text-right\">\n                            <a [routerLink]=\"'/login'\">Volver al inicio de sesión</a>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}