{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/forms';\nclass InputTextarea {\n  constructor(el, ngModel, control, cd) {\n    this.el = el;\n    this.ngModel = ngModel;\n    this.control = control;\n    this.cd = cd;\n    this.onResize = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this.ngModel) {\n      this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() => {\n        this.updateState();\n      });\n    }\n    if (this.control) {\n      this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n        this.updateState();\n      });\n    }\n  }\n  ngAfterViewInit() {\n    if (this.autoResize) this.resize();\n    this.updateFilledState();\n    this.cd.detectChanges();\n  }\n  onInput(e) {\n    this.updateState();\n  }\n  updateFilledState() {\n    this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n  }\n  onFocus(e) {\n    if (this.autoResize) {\n      this.resize(e);\n    }\n  }\n  onBlur(e) {\n    if (this.autoResize) {\n      this.resize(e);\n    }\n  }\n  resize(event) {\n    this.el.nativeElement.style.height = 'auto';\n    this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n    if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n      this.el.nativeElement.style.overflowY = 'scroll';\n      this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n    } else {\n      this.el.nativeElement.style.overflow = 'hidden';\n    }\n    this.onResize.emit(event || {});\n  }\n  updateState() {\n    this.updateFilledState();\n    if (this.autoResize) {\n      this.resize();\n    }\n  }\n  ngOnDestroy() {\n    if (this.ngModelSubscription) {\n      this.ngModelSubscription.unsubscribe();\n    }\n    if (this.ngControlSubscription) {\n      this.ngControlSubscription.unsubscribe();\n    }\n  }\n}\nInputTextarea.ɵfac = function InputTextarea_Factory(t) {\n  return new (t || InputTextarea)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.NgModel, 8), i0.ɵɵdirectiveInject(i1.NgControl, 8), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n};\nInputTextarea.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: InputTextarea,\n  selectors: [[\"\", \"pInputTextarea\", \"\"]],\n  hostAttrs: [1, \"p-inputtextarea\", \"p-inputtext\", \"p-component\", \"p-element\"],\n  hostVars: 4,\n  hostBindings: function InputTextarea_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"input\", function InputTextarea_input_HostBindingHandler($event) {\n        return ctx.onInput($event);\n      })(\"focus\", function InputTextarea_focus_HostBindingHandler($event) {\n        return ctx.onFocus($event);\n      })(\"blur\", function InputTextarea_blur_HostBindingHandler($event) {\n        return ctx.onBlur($event);\n      });\n    }\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"p-filled\", ctx.filled)(\"p-inputtextarea-resizable\", ctx.autoResize);\n    }\n  },\n  inputs: {\n    autoResize: \"autoResize\"\n  },\n  outputs: {\n    onResize: \"onResize\"\n  }\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputTextarea, [{\n    type: Directive,\n    args: [{\n      selector: '[pInputTextarea]',\n      host: {\n        class: 'p-inputtextarea p-inputtext p-component p-element',\n        '[class.p-filled]': 'filled',\n        '[class.p-inputtextarea-resizable]': 'autoResize'\n      }\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i1.NgModel,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i1.NgControl,\n      decorators: [{\n        type: Optional\n      }]\n    }, {\n      type: i0.ChangeDetectorRef\n    }];\n  }, {\n    autoResize: [{\n      type: Input\n    }],\n    onResize: [{\n      type: Output\n    }],\n    onInput: [{\n      type: HostListener,\n      args: ['input', ['$event']]\n    }],\n    onFocus: [{\n      type: HostListener,\n      args: ['focus', ['$event']]\n    }],\n    onBlur: [{\n      type: HostListener,\n      args: ['blur', ['$event']]\n    }]\n  });\n})();\nclass InputTextareaModule {}\nInputTextareaModule.ɵfac = function InputTextareaModule_Factory(t) {\n  return new (t || InputTextareaModule)();\n};\nInputTextareaModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: InputTextareaModule\n});\nInputTextareaModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InputTextareaModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      exports: [InputTextarea],\n      declarations: [InputTextarea]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputTextarea, InputTextareaModule };\n//# sourceMappingURL=primeng-inputtextarea.mjs.map","map":{"version":3,"names":["i0","EventEmitter","Directive","Optional","Input","Output","HostListener","NgModule","CommonModule","i1","InputTextarea","constructor","el","ngModel","control","cd","onResize","ngOnInit","ngModelSubscription","valueChanges","subscribe","updateState","ngControlSubscription","ngAfterViewInit","autoResize","resize","updateFilledState","detectChanges","onInput","e","filled","nativeElement","value","length","onFocus","onBlur","event","style","height","scrollHeight","parseFloat","maxHeight","overflowY","overflow","emit","ngOnDestroy","unsubscribe","ɵfac","ElementRef","NgModel","NgControl","ChangeDetectorRef","ɵdir","type","args","selector","host","class","decorators","InputTextareaModule","ɵmod","ɵinj","imports","exports","declarations"],"sources":["C:/Users/desta/Downloads/FrontEnd/node_modules/primeng/fesm2020/primeng-inputtextarea.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Directive, Optional, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as i1 from '@angular/forms';\n\nclass InputTextarea {\n    constructor(el, ngModel, control, cd) {\n        this.el = el;\n        this.ngModel = ngModel;\n        this.control = control;\n        this.cd = cd;\n        this.onResize = new EventEmitter();\n    }\n    ngOnInit() {\n        if (this.ngModel) {\n            this.ngModelSubscription = this.ngModel.valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n        if (this.control) {\n            this.ngControlSubscription = this.control.valueChanges.subscribe(() => {\n                this.updateState();\n            });\n        }\n    }\n    ngAfterViewInit() {\n        if (this.autoResize)\n            this.resize();\n        this.updateFilledState();\n        this.cd.detectChanges();\n    }\n    onInput(e) {\n        this.updateState();\n    }\n    updateFilledState() {\n        this.filled = this.el.nativeElement.value && this.el.nativeElement.value.length;\n    }\n    onFocus(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    onBlur(e) {\n        if (this.autoResize) {\n            this.resize(e);\n        }\n    }\n    resize(event) {\n        this.el.nativeElement.style.height = 'auto';\n        this.el.nativeElement.style.height = this.el.nativeElement.scrollHeight + 'px';\n        if (parseFloat(this.el.nativeElement.style.height) >= parseFloat(this.el.nativeElement.style.maxHeight)) {\n            this.el.nativeElement.style.overflowY = 'scroll';\n            this.el.nativeElement.style.height = this.el.nativeElement.style.maxHeight;\n        }\n        else {\n            this.el.nativeElement.style.overflow = 'hidden';\n        }\n        this.onResize.emit(event || {});\n    }\n    updateState() {\n        this.updateFilledState();\n        if (this.autoResize) {\n            this.resize();\n        }\n    }\n    ngOnDestroy() {\n        if (this.ngModelSubscription) {\n            this.ngModelSubscription.unsubscribe();\n        }\n        if (this.ngControlSubscription) {\n            this.ngControlSubscription.unsubscribe();\n        }\n    }\n}\nInputTextarea.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: InputTextarea, deps: [{ token: i0.ElementRef }, { token: i1.NgModel, optional: true }, { token: i1.NgControl, optional: true }, { token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Directive });\nInputTextarea.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"15.1.0\", type: InputTextarea, selector: \"[pInputTextarea]\", inputs: { autoResize: \"autoResize\" }, outputs: { onResize: \"onResize\" }, host: { listeners: { \"input\": \"onInput($event)\", \"focus\": \"onFocus($event)\", \"blur\": \"onBlur($event)\" }, properties: { \"class.p-filled\": \"filled\", \"class.p-inputtextarea-resizable\": \"autoResize\" }, classAttribute: \"p-inputtextarea p-inputtext p-component p-element\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: InputTextarea, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[pInputTextarea]',\n                    host: {\n                        class: 'p-inputtextarea p-inputtext p-component p-element',\n                        '[class.p-filled]': 'filled',\n                        '[class.p-inputtextarea-resizable]': 'autoResize'\n                    }\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.NgModel, decorators: [{\n                    type: Optional\n                }] }, { type: i1.NgControl, decorators: [{\n                    type: Optional\n                }] }, { type: i0.ChangeDetectorRef }]; }, propDecorators: { autoResize: [{\n                type: Input\n            }], onResize: [{\n                type: Output\n            }], onInput: [{\n                type: HostListener,\n                args: ['input', ['$event']]\n            }], onFocus: [{\n                type: HostListener,\n                args: ['focus', ['$event']]\n            }], onBlur: [{\n                type: HostListener,\n                args: ['blur', ['$event']]\n            }] } });\nclass InputTextareaModule {\n}\nInputTextareaModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: InputTextareaModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nInputTextareaModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.1.0\", ngImport: i0, type: InputTextareaModule, declarations: [InputTextarea], imports: [CommonModule], exports: [InputTextarea] });\nInputTextareaModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: InputTextareaModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.1.0\", ngImport: i0, type: InputTextareaModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    exports: [InputTextarea],\n                    declarations: [InputTextarea]\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { InputTextarea, InputTextareaModule };\n//# sourceMappingURL=primeng-inputtextarea.mjs.map\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}